<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload - Terp Notes Mobile</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #F8FAFC;
        }

        .mobile-header {
            background: linear-gradient(135deg, #DC2626, #B91C1C);
            color: white;
            padding: 1rem;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .mobile-header h1 {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .mobile-header img {
            width: 24px;
            height: 24px;
        }

        .mobile-user-info {
            margin-top: 0.5rem;
            font-size: 0.875rem;
            opacity: 0.9;
        }

        .mobile-nav {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.75rem;
        }

        .mobile-nav-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.8rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .mobile-nav-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .mobile-container {
            padding: 1rem;
            max-width: 100%;
        }

        .mobile-upload-section {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .mobile-upload-title {
            font-size: 1.1rem;
            font-weight: 700;
            color: #1F2937;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .mobile-form-group {
            margin-bottom: 1.5rem;
        }

        .mobile-form-label {
            display: block;
            color: #374151;
            font-weight: 600;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }

        .mobile-form-input {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #E5E7EB;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.2s ease;
            box-sizing: border-box;
        }

        .mobile-form-input:focus {
            outline: none;
            border-color: #DC2626;
        }

        .mobile-dropdown-wrapper {
            position: relative;
        }

        .mobile-dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #E5E7EB;
            border-radius: 8px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            z-index: 50;
            max-height: 200px;
            overflow-y: auto;
            display: none;
        }

        .mobile-dropdown-item {
            padding: 12px 16px;
            cursor: pointer;
            border-bottom: 1px solid #F3F4F6;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

        .mobile-dropdown-item:hover {
            background-color: #F9FAFB;
        }

        .mobile-dropdown-item:last-child {
            border-bottom: none;
        }

        .mobile-form-help {
            margin-top: 4px;
            display: block;
        }

        .mobile-file-input {
            width: 100%;
            padding: 1rem;
            border: 2px dashed #D1D5DB;
            border-radius: 8px;
            text-align: center;
            background: #F9FAFB;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .mobile-file-input:hover {
            border-color: #DC2626;
            background: #FEF2F2;
        }

        .mobile-upload-btn {
            width: 100%;
            background: #DC2626;
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        .mobile-upload-btn:hover {
            background: #B91C1C;
        }

        .mobile-upload-btn:disabled {
            background: #9CA3AF;
            cursor: not-allowed;
        }

        .mobile-bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            border-top: 1px solid #E5E7EB;
            display: flex;
            padding: 0.5rem 0;
            z-index: 1000;
        }

        .mobile-nav-item {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 0.5rem;
            text-decoration: none;
            color: #6B7280;
            font-size: 0.75rem;
            transition: color 0.2s ease;
        }

        .mobile-nav-item.active {
            color: #DC2626;
        }

        .mobile-nav-item:hover {
            color: #DC2626;
        }

        .mobile-nav-icon {
            font-size: 1.25rem;
            margin-bottom: 0.25rem;
        }

        .mobile-body {
            padding-bottom: 4rem; /* Space for bottom nav */
        }

        .mobile-notification {
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            display: none;
        }

        .mobile-notification.success {
            background: #D1FAE5;
            color: #065F46;
            border: 1px solid #A7F3D0;
        }

        .mobile-notification.error {
            background: #FEE2E2;
            color: #991B1B;
            border: 1px solid #FECACA;
        }
    </style>
</head>
<body>
    <!-- Mobile Header -->
    <header class="mobile-header">
        <h1>
            <img src="/logo.png" alt="Terp Notes">
            Upload Files
        </h1>
        <div class="mobile-user-info">
            Upload your study materials
        </div>
        <div class="mobile-nav">
            <a href="/mobile/dashboard" class="mobile-nav-btn">Dashboard</a>
            <a href="/mobile/profile" class="mobile-nav-btn">Profile</a>
            <a href="/logout" class="mobile-nav-btn">Logout</a>
        </div>
    </header>

    <main class="mobile-body">
        <div class="mobile-container">
            <!-- Wide Screen Web Switch Button -->
            <div id="wideScreenWebSwitch" style="display: none; background: #F0F9FF; border: 1px solid #0EA5E9; border-radius: 8px; padding: 0.75rem 1rem; margin-bottom: 1rem; text-align: center;">
                <div style="color: #0C4A6E; font-size: 0.875rem; margin-bottom: 0.5rem;">
                    💻 <strong>Wide Screen Detected</strong>
                </div>
                <p style="color: #0C4A6E; font-size: 0.8rem; margin: 0 0 0.75rem 0;">
                    Your screen is wide enough for the full desktop experience with all features.
                </p>
                <a href="/upload" style="background: #0EA5E9; color: white; padding: 0.5rem 1rem; border-radius: 6px; text-decoration: none; font-size: 0.8rem; font-weight: 600; display: inline-block; transition: background 0.2s ease;" onmouseover="this.style.background='#0284C7'" onmouseout="this.style.background='#0EA5E9'">
                    Switch to Web View
                </a>
            </div>

            <div class="mobile-upload-section">
                <h2 class="mobile-upload-title">📤 Upload Files</h2>

                <div id="mobileNotification" class="mobile-notification"></div>

                <form id="mobileUploadForm" action="/upload" method="POST" enctype="multipart/form-data">
                    <div class="mobile-form-group">
                        <label for="mobileFiles" class="mobile-form-label">Select Files<span style="color: #DC2626;">*</span></label>
                        <input type="file" id="mobileFiles" name="documents" multiple class="mobile-file-input" required>
                        <p style="font-size: 0.8rem; color: #6B7280; margin-top: 0.5rem;">
                            You can select multiple files at once (up to 50 files, 100MB each)
                        </p>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileClassCode" class="mobile-form-label">Class Code<span style="color: #DC2626;">*</span></label>
                        <div class="mobile-dropdown-wrapper">
                            <input type="text" id="mobileClassCode" name="classCode" class="mobile-form-input" placeholder="e.g., CMSC330, HIST000" autocomplete="off" required>
                            <div class="mobile-dropdown" id="mobileCoursesDropdown"></div>
                        </div>
                        <small class="mobile-form-help" style="color: #6B7280; font-size: 0.75rem;">
                            Start typing to see course suggestions...
                        </small>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileProfessor" class="mobile-form-label">Professor<span style="color: #DC2626;">*</span></label>
                        <div class="mobile-dropdown-wrapper">
                            <input type="text" id="mobileProfessor" name="professor" class="mobile-form-input" placeholder="e.g., Dr. Nelson, Prof. Smith" autocomplete="off" required>
                            <div class="mobile-dropdown" id="mobileProfessorsDropdown"></div>
                        </div>
                        <small class="mobile-form-help" style="color: #9CA3AF; font-size: 0.75rem;">
                            Select a course first to see professors, then type to filter
                        </small>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileSemester" class="mobile-form-label">Semester<span style="color: #DC2626;">*</span></label>
                        <select id="mobileSemester" name="semester" class="mobile-form-input" required>
                            <option value="">Select semester</option>
                            <option value="Fall">Fall</option>
                            <option value="Spring">Spring</option>
                            <option value="Summer">Summer</option>
                            <option value="Winter">Winter</option>
                        </select>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileYear" class="mobile-form-label">Year<span style="color: #DC2626;">*</span></label>
                        <select id="mobileYear" name="year" class="mobile-form-input" required>
                            <option value="">Select year</option>
                            <% for (let y=new Date().getFullYear(); y >= 2020; y--) { %>
                                <option value="<%= y %>"><%= y %></option>
                            <% } %>
                        </select>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileCategory" class="mobile-form-label">Category<span style="color: #DC2626;">*</span></label>
                        <select id="mobileCategory" name="category" class="mobile-form-input" required>
                            <option value="">Select category</option>
                            <option value="Exam">📝 Exam</option>
                            <option value="Lecture Notes">📚 Lecture Notes</option>
                            <option value="Homework">✏️ Homework</option>
                            <option value="Study Guide">📖 Study Guide</option>
                            <option value="Cheat Sheet">🗒️ Cheat Sheet</option>
                            <option value="Project">💻 Project</option>
                            <option value="Lab">🧪 Lab</option>
                            <option value="Textbook">📕 Textbook</option>
                            <option value="Practice Problems">🔢 Practice Problems</option>
                            <option value="Other">📎 Other</option>
                        </select>
                    </div>

                    <div class="mobile-form-group">
                        <label for="mobileDescription" class="mobile-form-label">Description<span style="color: #DC2626;">*</span></label>
                        <textarea id="mobileDescription" name="description" class="mobile-form-input" rows="3" placeholder="e.g., Week 1 Lectures, Midterm Study Guide, Chapter 3 Summary" required></textarea>
                    </div>

                    <div class="mobile-form-group">
                        <label class="mobile-checkbox-label" style="display: flex; align-items: flex-start; gap: 0.75rem; cursor: pointer; font-size: 0.875rem; line-height: 1.5;">
                            <input type="checkbox" id="mobileAcademicIntegrity" name="academicIntegrity" style="width: 18px; height: 18px; margin-top: 2px; accent-color: #DC2626; flex-shrink: 0;" required>
                            <span>
                                <strong>Academic Integrity Agreement</strong><span style="color: #EF4444;">*</span><br>
                                <span style="color: #6B7280; font-size: 0.8rem;">
                                    I confirm that all uploaded materials are my own work or properly cited, and do not violate University of Maryland's academic integrity policies.
                                </span>
                            </span>
                        </label>
                    </div>

                    <button type="submit" class="mobile-upload-btn" id="mobileUploadBtn">
                        Upload Files
                    </button>
                </form>
            </div>
        </div>
    </main>

    <!-- Mobile Bottom Navigation -->
    <nav class="mobile-bottom-nav">
        <a href="/mobile/dashboard" class="mobile-nav-item">
            <div class="mobile-nav-icon">🏠</div>
            <div>Home</div>
        </a>
        <a href="/mobile/admin" class="mobile-nav-item">
            <div class="mobile-nav-icon">⚙️</div>
            <div>Admin</div>
        </a>
        <a href="/mobile/profile" class="mobile-nav-item">
            <div class="mobile-nav-icon">👤</div>
            <div>Profile</div>
        </a>
        <a href="/mobile/upload" class="mobile-nav-item active">
            <div class="mobile-nav-icon">📤</div>
            <div>Upload</div>
        </a>
    </nav>

    <script>
        // Mobile upload form submission - let the form submit naturally to match desktop
        document.getElementById('mobileUploadForm').addEventListener('submit', function(e) {
            const files = document.getElementById('mobileFiles').files;
            const uploadBtn = document.getElementById('mobileUploadBtn');

            if (files.length === 0) {
                e.preventDefault();
                showMobileNotification('Please select at least one file', 'error');
                return;
            }

            // Show loading state
            uploadBtn.disabled = true;
            uploadBtn.textContent = 'Uploading...';
        });

        function showMobileNotification(message, type) {
            const notification = document.getElementById('mobileNotification');
            notification.textContent = message;
            notification.className = `mobile-notification ${type}`;
            notification.style.display = 'block';

            setTimeout(() => {
                notification.style.display = 'none';
            }, 5000);
        }

        // UMD.io API Integration for Mobile Upload
        let mobileCourseData = [];
        let mobileProfessorData = [];
        let mobileCurrentCourseData = null;

        // Load course data on page load
        async function loadMobileCourseData() {
            try {
                const response = await fetch('/api/umd/courses?per_page=100');
                if (response.ok) {
                    mobileCourseData = await response.json();
                }
            } catch (error) {
                console.error('Failed to load course data:', error);
            }
        }

        // Course autocomplete functionality
        document.getElementById('mobileClassCode').addEventListener('input', function(e) {
            const query = e.target.value.toLowerCase();
            const dropdown = document.getElementById('mobileCoursesDropdown');

            if (query.length < 2) {
                dropdown.style.display = 'none';
                return;
            }

            const filteredCourses = mobileCourseData.filter(course =>
                course.course_id.toLowerCase().includes(query) ||
                course.name.toLowerCase().includes(query)
            ).slice(0, 10);

            if (filteredCourses.length > 0) {
                dropdown.innerHTML = filteredCourses.map(course =>
                    `<div class="mobile-dropdown-item" data-course-id="${course.course_id}">
                        <strong>${course.course_id}</strong> - ${course.name}
                    </div>`
                ).join('');
                dropdown.style.display = 'block';
            } else {
                dropdown.style.display = 'none';
            }
        });

        // Handle course selection
        document.getElementById('mobileCoursesDropdown').addEventListener('click', function(e) {
            if (e.target.classList.contains('mobile-dropdown-item')) {
                const courseId = e.target.dataset.courseId;
                document.getElementById('mobileClassCode').value = courseId;
                document.getElementById('mobileCoursesDropdown').style.display = 'none';

                // Load professors for this course
                loadMobileProfessorsForCourse(courseId);
            }
        });

        // Load professors for a specific course (with default year like desktop)
        async function loadMobileProfessorsForCourse(courseId) {
            try {
                const selectedSemester = document.getElementById('mobileSemester').value;
                const selectedYear = document.getElementById('mobileYear').value;

                // Build query parameters (same logic as desktop)
                let queryParams = `course_id=${encodeURIComponent(courseId)}`;

                // Use current year as default if no year is selected (same as desktop)
                const currentYear = new Date().getFullYear();
                const yearToUse = selectedYear || currentYear.toString();
                queryParams += `&filter_year=${encodeURIComponent(yearToUse)}`;

                if (selectedSemester) {
                    queryParams += `&filter_semester=${encodeURIComponent(selectedSemester)}`;
                }

                const response = await fetch(`/api/umd/professors?${queryParams}`);
                if (response.ok) {
                    mobileProfessorData = await response.json();

                    // Update professor input placeholder (same as desktop)
                    const professorInput = document.getElementById('mobileProfessor');
                    if (mobileProfessorData && mobileProfessorData.length > 0) {
                        professorInput.placeholder = `${mobileProfessorData.length} professor${mobileProfessorData.length !== 1 ? 's' : ''} taught ${courseId}`;

                        // Show professor dropdown immediately (like desktop)
                        showMobileProfessorDropdown();
                    } else {
                        professorInput.placeholder = 'No professors found for this course';
                        hideMobileProfessorDropdown();
                    }
                }
            } catch (error) {
                console.error('Failed to load professor data:', error);
            }
        }

        // Helper functions for professor dropdown
        function showMobileProfessorDropdown() {
            const dropdown = document.getElementById('mobileProfessorsDropdown');
            if (mobileProfessorData && mobileProfessorData.length > 0) {
                dropdown.innerHTML = mobileProfessorData.map(prof =>
                    `<div class="mobile-dropdown-item" data-professor="${prof.name}">
                        ${prof.name}
                    </div>`
                ).join('');
                dropdown.style.display = 'block';
            }
        }

        function hideMobileProfessorDropdown() {
            const dropdown = document.getElementById('mobileProfessorsDropdown');
            dropdown.style.display = 'none';
        }

        // Professor autocomplete functionality
        document.getElementById('mobileProfessor').addEventListener('input', function(e) {
            const query = e.target.value.toLowerCase();
            const dropdown = document.getElementById('mobileProfessorsDropdown');

            if (query.length === 0) {
                // Show all professors when field is empty (like desktop)
                showMobileProfessorDropdown();
                return;
            }

            if (query.length < 1) {
                dropdown.style.display = 'none';
                return;
            }

            const filteredProfessors = mobileProfessorData.filter(prof =>
                prof.name.toLowerCase().includes(query)
            ).slice(0, 10);

            if (filteredProfessors.length > 0) {
                dropdown.innerHTML = filteredProfessors.map(prof =>
                    `<div class="mobile-dropdown-item" data-professor="${prof.name}">
                        ${prof.name}
                    </div>`
                ).join('');
                dropdown.style.display = 'block';
            } else {
                dropdown.style.display = 'none';
            }
        });

        // Show professor dropdown when professor field is focused (like desktop)
        document.getElementById('mobileProfessor').addEventListener('focus', function() {
            if (mobileProfessorData && mobileProfessorData.length > 0) {
                showMobileProfessorDropdown();
            }
        });

        // Handle professor selection
        document.getElementById('mobileProfessorsDropdown').addEventListener('click', function(e) {
            if (e.target.classList.contains('mobile-dropdown-item')) {
                const professorName = e.target.dataset.professor;
                document.getElementById('mobileProfessor').value = professorName;
                document.getElementById('mobileProfessorsDropdown').style.display = 'none';
            }
        });

        // Hide dropdowns when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.mobile-dropdown-wrapper')) {
                document.getElementById('mobileCoursesDropdown').style.display = 'none';
                document.getElementById('mobileProfessorsDropdown').style.display = 'none';
            }
        });

        // Add event listeners for semester and year changes (like desktop)
        document.getElementById('mobileSemester').addEventListener('change', async function() {
            const selectedCourse = document.getElementById('mobileClassCode').value.trim();
            if (selectedCourse) {
                await loadMobileProfessorsForCourse(selectedCourse);
            }
        });

        document.getElementById('mobileYear').addEventListener('change', async function() {
            const selectedCourse = document.getElementById('mobileClassCode').value.trim();
            if (selectedCourse) {
                await loadMobileProfessorsForCourse(selectedCourse);
            }
        });

        // Check for wide screens and show web switch button
        document.addEventListener('DOMContentLoaded', function() {
            // Load course data
            loadMobileCourseData();

            // Initialize professor list on page load if course is already entered (like desktop)
            setTimeout(async function() {
                const selectedCourse = document.getElementById('mobileClassCode').value.trim();
                if (selectedCourse) {
                    await loadMobileProfessorsForCourse(selectedCourse);
                }
            }, 100);
            function checkScreenWidth() {
                const wideScreenSwitch = document.getElementById('wideScreenWebSwitch');
                if (wideScreenSwitch && window.innerWidth >= 1024) {
                    // Only show if on mobile route
                    if (window.location.pathname.startsWith('/mobile/')) {
                        wideScreenSwitch.style.display = 'block';
                    }
                } else if (wideScreenSwitch) {
                    wideScreenSwitch.style.display = 'none';
                }
            }

            // Check on load
            checkScreenWidth();

            // Check on resize
            window.addEventListener('resize', checkScreenWidth);
        });
    </script>
</body>
</html>
